name: Publish

on:
  push:
    tags:
      - "mg-airflow/*.*.*"
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install poetry
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          python get-poetry.py -y
          echo "::set-env name=PATH::$HOME/.poetry/bin:$PATH"
      - name: Configure poetry
        run: poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: mg-airflow/.venv
          key: mg-airflow-${{ runner.os }}-${{ hashFiles('**/mg-airflow/poetry.lock') }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf mg-airflow/.venv
      - name: Install Dependencies and Publish
        env:
          PYPI_USER: ${{ secrets.PYPI_USER }}
          PYPI_PASSWD: ${{ secrets.PYPI_PASSWD }}
        run: |
          cd mg-airflow
          poetry install --no-dev
          poetry config repositories.pypi "https://test.pypi.org/legacy/"
          poetry config http-basic.pypi ${PYPI_USER} ${PYPI_PASSWD}
          poetry build
          poetry publish -r pypi