name: Publish mg-airflow

on:
  push:
    tags:
      - "mg-airflow/*.*.*"

jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        poetry-version: [ 1.1.8 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Configure poetry
        run: |-
          cd mg-airflow
          poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: mg-airflow/.venv
          key: mg-airflow-${{ runner.os }}-${{ hashFiles('**/mg-airflow/poetry.lock') }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf mg-airflow/.venv
      - name: Install Dependencies and Publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |-
          cd mg-airflow
          poetry config pypi-token.pypi ${PYPI_TOKEN}
          poetry install --no-dev
          poetry build
          poetry publish