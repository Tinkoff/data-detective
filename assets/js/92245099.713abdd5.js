"use strict";(self.webpackChunkdata_detective_docusaurus=self.webpackChunkdata_detective_docusaurus||[]).push([[696],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return u}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function d(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),p=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=p(t.components);return a.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,s=d(t,["components","mdxType","originalType","parentName"]),c=p(n),u=r,g=c["".concat(o,".").concat(u)]||c[u]||m[u]||l;return n?a.createElement(g,i(i({ref:e},s),{},{components:n})):a.createElement(g,i({ref:e},s))}));function u(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=c;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5542:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],d={id:"dds.entity"},o="dds.entity",p={unversionedId:"logical_model/dds/dds.entity",id:"logical_model/dds/dds.entity",isDocsHomePage:!1,title:"dds.entity",description:"Info",source:"@site/docs/logical_model/dds/dds.entity.md",sourceDirName:"logical_model/dds",slug:"/logical_model/dds/dds.entity",permalink:"/docs/logical_model/dds/dds.entity",editUrl:"https://github.com/tinkoff/data-detective/edit/master/tools/doc-site/docs/logical_model/dds/dds.entity.md",tags:[],version:"current",frontMatter:{id:"dds.entity"},sidebar:"tutorialSidebar",previous:{title:"Layers",permalink:"/docs/logical_model/layers"},next:{title:"dds.relation",permalink:"/docs/logical_model/dds/dds.relation"}},s=[{value:"Info",id:"info",children:[],level:2},{value:"Structure",id:"structure",children:[],level:2},{value:"Attributes",id:"attributes",children:[],level:2},{value:"Additional info",id:"additional-info",children:[{value:"codes",id:"codes",children:[],level:3},{value:"json_data_ui",id:"json_data_ui",children:[],level:3},{value:"json_system",id:"json_system",children:[],level:3},{value:"htmls",id:"htmls",children:[],level:3},{value:"links",id:"links",children:[],level:3},{value:"notifications",id:"notifications",children:[],level:3},{value:"tables",id:"tables",children:[],level:3},{value:"filters",id:"filters",children:[],level:3}],level:2}],m={toc:s};function c(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"ddsentity"},"dds.entity"),(0,l.kt)("h2",{id:"info"},"Info"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Table with entities")),(0,l.kt)("h2",{id:"structure"},"Structure"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"right"},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Info"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Additional Info"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"},"PK"),(0,l.kt)("td",{parentName:"tr",align:null},"urn"),(0,l.kt)("td",{parentName:"tr",align:null},"Uniform Resource Name of entity"),(0,l.kt)("td",{parentName:"tr",align:"left"},"urn:...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"loaded_by"),(0,l.kt)("td",{parentName:"tr",align:null},"A URN of loaded process"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Usually contains DAG name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"entity_name"),(0,l.kt)("td",{parentName:"tr",align:null},"Entity full name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"For DB table this is 'schema.table'")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"entity_name_short"),(0,l.kt)("td",{parentName:"tr",align:null},"Short entity name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"For DB table only table name without schema")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"entity_type"),(0,l.kt)("td",{parentName:"tr",align:null},"Entity type"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Examples: JOB/SCHEMA/TABLE/COLUMN")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"info"),(0,l.kt)("td",{parentName:"tr",align:null},"Short info about entity"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"search_data"),(0,l.kt)("td",{parentName:"tr",align:null},"Text for the search index"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"json_data"),(0,l.kt)("td",{parentName:"tr",align:null},"Entity raw attributes"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"json_system"),(0,l.kt)("td",{parentName:"tr",align:null},"JSON with attributes for search and display"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"json_data_ui"),(0,l.kt)("td",{parentName:"tr",align:null},"List of keys from json_data to display on the web"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"codes"),(0,l.kt)("td",{parentName:"tr",align:null},"List of code blocks"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"grid"),(0,l.kt)("td",{parentName:"tr",align:null},"Uses for card view"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"htmls"),(0,l.kt)("td",{parentName:"tr",align:null},"List of html blocks"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"links"),(0,l.kt)("td",{parentName:"tr",align:null},"List of links to external pages"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"notifications"),(0,l.kt)("td",{parentName:"tr",align:null},"List of notification blocks"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"tables"),(0,l.kt)("td",{parentName:"tr",align:null},"List of table blocks"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"tags"),(0,l.kt)("td",{parentName:"tr",align:null},"Simple list with text tags"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"filters"),(0,l.kt)("td",{parentName:"tr",align:null},"Filter for search and display"),(0,l.kt)("td",{parentName:"tr",align:"left"},"JSON type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"right"}),(0,l.kt)("td",{parentName:"tr",align:null},"processed_dttm"),(0,l.kt)("td",{parentName:"tr",align:null},"Datetime of ETL record processing"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Timestamp")))),(0,l.kt)("h2",{id:"attributes"},"Attributes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"Created"),(0,l.kt)("td",{parentName:"tr",align:null},"2021.08.02")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"Owner"),(0,l.kt)("td",{parentName:"tr",align:null},"Date Detective Team")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"Location"),(0,l.kt)("td",{parentName:"tr",align:null},"PG")))),(0,l.kt)("h2",{id:"additional-info"},"Additional info"),(0,l.kt)("p",null,"We didn't put JSON Schema in the main table because of difficulties with the docusaurus build."),(0,l.kt)("h3",{id:"codes"},"codes"),(0,l.kt)("p",null,"JSON Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "type": "array",\n  "items": [\n    {\n      "type": "object",\n      "properties": {\n        "header": {\n          "description": "Block header",\n          "minLength": 1,\n          "type": "string"\n        },\n        "language": {\n          "description": "Code language",\n          "default": "sql",\n          "enum": [\n            "markdown",\n            "python",\n            "sql"\n          ],\n          "type": "string"\n        },\n        "opened": {\n          "default": "1",\n          "description": "Opened/closed block",\n          "enum": [\n            "0",\n            "1"\n          ],\n          "type": "string"\n        },\n        "data": {\n          "description": "Code text",\n          "type": "string"\n        }\n      },\n      "required": [\n        "header",\n        "data"\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "header": "Code header",\n        "language": "sql",\n        "opened": "1",\n        "data": "select * from table;"\n    }\n]\n')),(0,l.kt)("h3",{id:"json_data_ui"},"json_data_ui"),(0,l.kt)("p",null,"JSON Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "type": "object",\n  "properties": {\n    "keys": {\n      "description": "Key names from json_data, that would be displayed on the web",\n      "type": "array",\n      "items": [\n        {\n          "type": "string"\n        }\n      ]\n    },\n    "opened": {\n      "default": "1",\n      "description": "Opened/closed block",\n      "enum": [\n        "0",\n        "1"\n      ],\n      "type": "string"\n    }\n  },\n  "required": [\n    "keys"\n  ]\n}\n')),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "keys": [\n    "key1",\n    "key2"\n  ],\n  "opened": "1"\n}\n')),(0,l.kt)("h3",{id:"json_system"},"json_system"),(0,l.kt)("p",null,"JSON Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "type": "object",\n  "properties": {\n    "card_type": {\n      "description": "Displayed entity",\n      "type": "string"\n    },\n    "type_for_search": {\n      "description": "Entity type for search",\n      "type": "string"\n    },\n    "system_for_search": {\n      "description": "System for search",\n      "type": "string"\n    }\n  }\n}\n')),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "card_type": "Table",\n        "type_for_search": "Table",\n        "system_for_search": "Greenplum",\n    }\n]\n')),(0,l.kt)("h3",{id:"htmls"},"htmls"),(0,l.kt)("p",null,"JSON Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "type": "array",\n  "items": [\n    {\n      "type": "object",\n      "properties": {\n        "data": {\n          "description": "Text with HTML",\n          "type": "string"\n        },\n        "header": {\n          "description": "Block header",\n          "minLength": 1,\n          "type": "string"\n        },\n        "opened": {\n          "default": "1",\n          "description": "Opened/closed block",\n          "enum": [\n            "0",\n            "1"\n          ],\n          "type": "string"\n        }\n      },\n      "required": [\n        "data",\n        "header"\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "data": "Text with <b>HTML</b>",\n        "header": "Block header",\n        "opened": "1"\n    }\n]\n')),(0,l.kt)("h3",{id:"links"},"links"),(0,l.kt)("p",null,"JSON Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "type": "array",\n  "items": [\n    {\n      "type": "object",\n      "properties": {\n        "link": {\n          "description": "URL",\n          "type": "string"\n        },\n        "type": {\n          "type": "string",\n          "enum": ["external", "wiki"]\n        }\n      },\n      "required": [\n        "link",\n        "type"\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "link": "https://github.com/tinkoff/data-detective",\n    "type": "external"\n  }\n]\n')),(0,l.kt)("h3",{id:"notifications"},"notifications"),(0,l.kt)("p",null,"JSON Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "type": "array",\n  "items": [\n    {\n      "type": "object",\n      "properties": {\n        "type": {\n          "type": "string",\n          "description": "Info - green, success - blue, warning - orange, error - red",\n          "enum": ["success", "warning", "error", "info"]\n        },\n        "header": {\n          "description": "Block header",\n          "minLength": 1,\n          "type": "string"\n        },\n        "data": {\n          "type": "string",\n          "description": "Block text"\n        }\n      },\n      "required": [\n        "type",\n        "data"\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "type": "info",\n        "header": "Header for the green panel",\n        "data": "Green panel"\n    }\n]\n')),(0,l.kt)("h3",{id:"tables"},"tables"),(0,l.kt)("p",null,"JSON Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "type": "object",\n  "properties": {\n    "columns": {\n      "type": "array",\n      "items": [\n        {\n          "type": "string"\n        }\n      ]\n    },\n    "data": {\n      "type": "array",\n      "items": [\n        {\n          "type": "object",\n          "properties": {\n            "columnName": {\n              "type": "string"\n            }\n          },\n          "required": [\n            "columnNames..."\n          ]\n        }\n      ]\n    },\n    "display_headers": {\n      "default": "1",\n      "description": "Display table headers and block name",\n      "enum": [\n        "0",\n        "1"\n      ],\n      "type": "string"\n    },\n    "header": {\n      "description": "Table header",\n      "minLength": 1,\n      "type": "string"\n    }\n  },\n  "required": [\n    "columns",\n    "data",\n    "display_headers",\n    "header"\n  ]\n}\n')),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "data": [\n      {\n        "column1": 101,\n        "column2": "value1"\n      },\n      {\n        "column1": 102,\n        "column2": "value2"\n      }\n    ],\n    "columns": [\n      "column1",\n      "column2"\n    ],\n    "header": "Table header",\n    "display_headers": "1"\n  }\n]\n')),(0,l.kt)("h3",{id:"filters"},"filters"),(0,l.kt)("p",null,"JSON Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "type": "object",\n  "properties": {\n    "FilterCategoryName": {\n      "description": "Filters for objects category in widescreen tree",\n      "default": "Label for filter category name",\n      "type": "string"\n    }\n  },\n  "required": [\n    "FilterCategoryName"\n  ]\n}\n')),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-JSON"},' {\n  "filters": {\n    "Type": "Object type",\n    "User": "Object users",\n    "Support Team": "Team for support object",\n    "Customer Team": "Customer of object",\n    "Author": "Author of object"\n  }\n}\n')))}c.isMDXComponent=!0}}]);