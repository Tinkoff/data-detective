[tool.poetry]
name = "data_detective_airflow"
license = "Apache-2.0"
version = "1.0.1"
description = "Framework with task testing over Apache Airflow"
authors = ["Tinkoff Data Detective Team"]
readme = 'README.md'  # Markdown files are supported
keywords = ["airflow testing result metadata governance catalog data detective"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries",
]

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/tinkoff/data-detective/issues"
"Documentation" = "https://tinkoff.github.io/data-detective/docs/data-detective-airflow/intro"
"Repository" = "https://github.com/tinkoff/data-detective/tree/master/data-detective-airflow"

[tool.poetry.dependencies]
python = "^3.9"
apache-airflow = "~2.1"
apache-airflow-providers-amazon = "*"
apache-airflow-providers-celery = "*"
apache-airflow-providers-postgres = "*"
apache-airflow-providers-redis = "*"
apache-airflow-providers-ssh = "*"
pandas = "^1.1"
petl = "^1.7"
psycopg2-binary = "^2.8"


[tool.poetry.dev-dependencies]
allure-pytest = "*"
autoflake = "*"
black = "*"
factory-boy = "*"
flake8 = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-eradicate = "*"
flake8-isort = "*"
flake8-logging-format = "*"
flake8-print = "*"
flake8-pytest = "*"
flake8-pytest-style = "*"
flake8-quotes = "*"
flake8-return = "*"
freezegun = "*"
isort = {version = "*",extras = ["pyproject"]}
mypy = "*"
pep8-naming = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
pytest-deadfixtures = "*"
pytest-mock = "*"
responses = "*"
types-freezegun = "*"
types-pytz = "*"
unify = "*"
types-PyYAML = "*"
types-paramiko = "*"
types-requests = "*"

[tool.black]
line-length = 120
target-version = ["py39"]

[tool.isort]
profile = "hug"
line_length = 120
src_paths = [
    "data_detective_airflow",
    "tests",
    "tests_data",
]
multi_line_output = 4


[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
